@model MVCStudentDetails.Context.tbl_MVCStudent

@{
    ViewBag.Title = "Student";
}

<style>
    .error{
        color: #ff0000;
    }
</style>

@using (Html.BeginForm("AddStudent", "Student", FormMethod.Post))       //MethodName, ControllerName, FormMethod
{
    <br>
<div class="container">
    <div class="form-group">
        @Html.HiddenFor(x => x.ID)
        <label>FName</label>
        @Html.ValidationMessageFor(x => x.Fname, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Fname, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>LName</label>
        @Html.ValidationMessageFor(x => x.Lname, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Lname, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Email</label>
        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Mobile</label>
        @Html.ValidationMessageFor(x => x.Mobile, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Mobile, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Description</label>
        @Html.ValidationMessageFor(x => x.Description, "", new { @class = "error" })
        @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @rows = "10" })
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
        <button type="submit" class="btn btn-danger">Reset</button>
    </div>

</div>
}